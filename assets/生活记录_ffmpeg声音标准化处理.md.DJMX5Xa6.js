import{_ as i,c as s,o as e,ag as t}from"./chunks/framework.8SQNO8WI.js";const m=JSON.parse('{"title":"ffmpeg-normalize 声音标准化处理","description":"","frontmatter":{},"headers":[],"relativePath":"生活记录/ffmpeg声音标准化处理.md","filePath":"生活记录/ffmpeg声音标准化处理.md","lastUpdated":1726751882000}'),l={name:"生活记录/ffmpeg声音标准化处理.md"};function n(p,a,h,r,k,o){return e(),s("div",null,[...a[0]||(a[0]=[t('<h1 id="ffmpeg-normalize-声音标准化处理" tabindex="-1">ffmpeg-normalize 声音标准化处理 <a class="header-anchor" href="#ffmpeg-normalize-声音标准化处理" aria-label="Permalink to &quot;ffmpeg-normalize 声音标准化处理&quot;">​</a></h1><h2 id="安装ffmpeg-normalize" tabindex="-1">安装ffmpeg-normalize <a class="header-anchor" href="#安装ffmpeg-normalize" aria-label="Permalink to &quot;安装ffmpeg-normalize&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg-normalize</span></span></code></pre></div><h2 id="使用ffmpeg-normalize标准化声音到-14lufs" tabindex="-1">使用ffmpeg-normalize标准化声音到-14LUFS <a class="header-anchor" href="#使用ffmpeg-normalize标准化声音到-14lufs" aria-label="Permalink to &quot;使用ffmpeg-normalize标准化声音到-14LUFS&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg-normalize</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./output_temp.mp3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./output.mp3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 44100</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --target</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -14</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --loudness-range</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dual-mono</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c:a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libmp3lame</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b:a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192k</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dynamic</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div>',5)])])}const g=i(l,[["render",n]]);export{m as __pageData,g as default};
