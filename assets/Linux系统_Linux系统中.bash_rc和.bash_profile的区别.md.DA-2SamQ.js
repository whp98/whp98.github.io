import{_ as a,c as i,o as l,ag as e}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Linux系统中.bash_rc和.bash_profile的区别","description":"","frontmatter":{},"headers":[],"relativePath":"Linux系统/Linux系统中.bash_rc和.bash_profile的区别.md","filePath":"Linux系统/Linux系统中.bash_rc和.bash_profile的区别.md","lastUpdated":1721284579000}'),h={name:"Linux系统/Linux系统中.bash_rc和.bash_profile的区别.md"};function n(t,s,r,p,o,d){return l(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="linux系统中-bash-rc和-bash-profile的区别" tabindex="-1">Linux系统中.bash_rc和.bash_profile的区别 <a class="header-anchor" href="#linux系统中-bash-rc和-bash-profile的区别" aria-label="Permalink to &quot;Linux系统中.bash_rc和.bash_profile的区别&quot;">​</a></h1><p><code>.bash_profile</code> 和 <code>.bashrc</code> 是两个用于配置 Bash shell 环境的文件，它们的区别在于何时以及如何被加载：</p><h3 id="bash-profile" tabindex="-1">.bash_profile <a class="header-anchor" href="#bash-profile" aria-label="Permalink to &quot;.bash_profile&quot;">​</a></h3><ul><li><strong>加载时机</strong>：仅在登录 shell（login shell）启动时加载。</li><li><strong>用途</strong>：主要用于配置用户登录时的环境变量和初始化脚本。</li><li><strong>典型位置</strong>：<code>~/.bash_profile</code> 或 <code>~/.profile</code>。</li><li><strong>示例</strong>：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .bash_profile</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:$HOME/bin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EDITOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vim</span></span></code></pre></div></li></ul><h3 id="bashrc" tabindex="-1">.bashrc <a class="header-anchor" href="#bashrc" aria-label="Permalink to &quot;.bashrc&quot;">​</a></h3><ul><li><strong>加载时机</strong>：在非登录 shell（non-login shell）启动时加载，例如打开一个新的终端窗口。</li><li><strong>用途</strong>：主要用于配置交互式 shell 会话的环境变量和别名等。</li><li><strong>典型位置</strong>：<code>~/.bashrc</code>。</li><li><strong>示例</strong>：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .bashrc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls -la&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PS1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[\\u@\\h \\W]\\$ &#39;</span></span></code></pre></div></li></ul><h3 id="结合使用" tabindex="-1">结合使用 <a class="header-anchor" href="#结合使用" aria-label="Permalink to &quot;结合使用&quot;">​</a></h3><p>通常情况下，<code>~/.bash_profile</code> 会调用 <code>~/.bashrc</code>，这样无论是登录 shell 还是非登录 shell，都会加载 <code>~/.bashrc</code> 中的配置。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .bash_profile</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/.bashrc ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre></div><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><ul><li><strong><code>.bash_profile</code></strong>：主要用于设置登录时的环境。</li><li><strong><code>.bashrc</code></strong>：主要用于设置交互式 shell 会话的环境。</li></ul><p>通过这种方式，可以确保所有 shell 会话都具有一致的配置。</p>`,12)])])}const b=a(h,[["render",n]]);export{c as __pageData,b as default};
