import{_ as t,c as e,o as a,ag as i}from"./chunks/framework.8SQNO8WI.js";const p="/assets/2020-03-07-19-52-39.CrOCtEJq.jpg",l="/assets/2020-03-07-19-54-03.B62Rz0_Y.jpg",r="/assets/2020-03-07-19-56-03.DNoaTuu-.jpg",n="/assets/2020-03-07-19-58-15.DMoTN5yG.jpg",o="/assets/2020-03-07-20-02-14.BZ3oQP-7.jpg",h="/assets/2020-03-07-20-03-50.BkLpfEB7.jpg",c="/assets/2020-03-07-20-05-59.H2U0oaWD.jpg",d="/assets/2020-03-07-20-30-50.GcX5pAll.jpg",C=JSON.parse('{"title":"Git拉请求和删除合并后的分支，以添加LICENSE为例","description":"","frontmatter":{"title":"Git拉请求和删除合并后的分支，以添加LICENSE为例","tags":["git","branch","merge","LICENSE","拉请求"],"categories":[["git","删除远程分支"],["git","LICENSE"]],"abbrlink":"79b4","date":"2020-03-07T19:42:36.000Z"},"headers":[],"relativePath":"Git版本管理/git创建pull-request和删除合并后的远程分支/git创建pull-request和删除合并后的远程分支.md","filePath":"Git版本管理/git创建pull-request和删除合并后的远程分支/git创建pull-request和删除合并后的远程分支.md","lastUpdated":1717397989000}'),g={name:"Git版本管理/git创建pull-request和删除合并后的远程分支/git创建pull-request和删除合并后的远程分支.md"};function u(k,s,_,E,m,b){return a(),e("div",null,[...s[0]||(s[0]=[i('<h1 id="git创建pull-request和删除合并后的远程分支" tabindex="-1">git创建pull-request和删除合并后的远程分支 <a class="header-anchor" href="#git创建pull-request和删除合并后的远程分支" aria-label="Permalink to &quot;git创建pull-request和删除合并后的远程分支&quot;">​</a></h1><p>使用github的时候我们能够发现，官方想要你每次对项目做出修改的时候都创建一个分支，这样能够降低项目的风险。</p><h2 id="例子-添加license" tabindex="-1">例子：添加LICENSE <a class="header-anchor" href="#例子-添加license" aria-label="Permalink to &quot;例子：添加LICENSE&quot;">​</a></h2><p>当我们修改完成的时候就可以pull request请求和主分支合并，然后仓库的主人就会检查一下修改然后将项目合并到主分支。 然后这时候新建的分支就可以删除了，那么如何删除呢，下面我用为仓库添加一个<code>LICENSE</code>为例演示一下如何操作。</p><p>首先打开项目首页</p><p><img src="'+p+'" alt="Create new file"></p><p>点击<code>Create new file</code></p><p><img src="'+l+'" alt="Choose a license template"></p><p>填写<code>LICENSE</code>然后选择后面的<code>Choose a license template</code>填写信息。</p><p><img src="'+r+'" alt="填写信息并确认修改"></p><p>添加commit信息</p><p><img src="'+n+'" alt="commit创建分支"></p><p>然后进入下一步开启<code>pull request</code></p><p><img src="'+o+'" alt="开启pull request"></p><p>然后操作仓库进行合并<code>merge pull request</code></p><p><img src="'+h+'" alt="处理合并"></p><p>这时候可以直接 点击 <code>delete branch</code>删除分支</p><p><img src="'+c+`" alt=""></p><h2 id="使用命令删除分支" tabindex="-1">使用命令删除分支 <a class="header-anchor" href="#使用命令删除分支" aria-label="Permalink to &quot;使用命令删除分支&quot;">​</a></h2><p>也使用可以像下面命令操作删除</p><div class="language-ps vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ps</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列出远程分支</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git branch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span></span></code></pre></div><div class="language-ps vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ps</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除分支</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git branch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">branch_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h3><p><img src="`+d+'" alt=""></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>git创建分支和合并分支都显得非常简单，所以git使用规范就是每次做修改都创建一个新的分支来操作，然后合并的时候就需要代码的管理员来操作一下，这个操作我们可以自行练习一下，这样我们更加熟练的掌握git技巧，可以更加方便的和其他人一起进行项目开发。</p>',26)])])}const y=t(g,[["render",u]]);export{C as __pageData,y as default};
