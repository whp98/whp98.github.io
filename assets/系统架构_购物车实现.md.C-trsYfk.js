import{_ as e,c as i,o as l,ag as o}from"./chunks/framework.8SQNO8WI.js";const _=JSON.parse('{"title":"购物车实现","description":"","frontmatter":{},"headers":[],"relativePath":"系统架构/购物车实现.md","filePath":"系统架构/购物车实现.md","lastUpdated":1726751071000}'),t={name:"系统架构/购物车实现.md"};function r(s,a,n,d,h,c){return l(),i("div",null,[...a[0]||(a[0]=[o('<h1 id="购物车实现" tabindex="-1">购物车实现 <a class="header-anchor" href="#购物车实现" aria-label="Permalink to &quot;购物车实现&quot;">​</a></h1><p>购物车有两种状态</p><ol><li>用户登录</li><li>用户未登录</li></ol><h2 id="cookie存储购物车" tabindex="-1">Cookie存储购物车 <a class="header-anchor" href="#cookie存储购物车" aria-label="Permalink to &quot;Cookie存储购物车&quot;">​</a></h2><p>好处</p><ol><li>无需登录</li><li>性能好 缺点</li><li>不能同步</li><li>可能会暴露隐私</li></ol><h2 id="session会话存储购物车" tabindex="-1">Session会话存储购物车 <a class="header-anchor" href="#session会话存储购物车" aria-label="Permalink to &quot;Session会话存储购物车&quot;">​</a></h2><p>优点</p><ol><li>规模较小的时候访问快 缺点</li><li>占用内存，用户量大会影响服务器性能</li><li>只能在当前应用，不适用于集群和分布式</li></ol><h2 id="数据库存储购物车数据" tabindex="-1">数据库存储购物车数据 <a class="header-anchor" href="#数据库存储购物车数据" aria-label="Permalink to &quot;数据库存储购物车数据&quot;">​</a></h2><p>优点</p><ol><li>数据库持久化可以在任何地点访问 缺点</li><li>频繁读写数据库造成数据库读写压力大</li></ol><h2 id="购物车数据存储在redis" tabindex="-1">购物车数据存储在Redis <a class="header-anchor" href="#购物车数据存储在redis" aria-label="Permalink to &quot;购物车数据存储在Redis&quot;">​</a></h2><p>用户登录后购物车存储入redis缓存 优点</p><ol><li>持久化存储</li><li>基于缓存，没有数据库压力</li><li>适用于集群和分布式系统，有较大扩展性</li></ol><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>综合多种比较</p><p>未登录用cookie， 登录用redis是比较好的选择</p>',18)])])}const u=e(t,[["render",r]]);export{_ as __pageData,u as default};
