import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.8SQNO8WI.js";const g=JSON.parse('{"title":"JSP","description":"","frontmatter":{},"headers":[],"relativePath":"后端开发/j2ee/jsp.md","filePath":"后端开发/j2ee/jsp.md","lastUpdated":1726751071000}'),l={name:"后端开发/j2ee/jsp.md"};function e(p,s,h,k,E,r){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="jsp" tabindex="-1">JSP <a class="header-anchor" href="#jsp" aria-label="Permalink to &quot;JSP&quot;">​</a></h1><h2 id="基本理解" tabindex="-1">基本理解 <a class="header-anchor" href="#基本理解" aria-label="Permalink to &quot;基本理解&quot;">​</a></h2><p>一个jsp就是一个servlet，目的是为了简化动态网站的开发，可以将java代码和html代码混 合在一起开发，提高效率。</p><h2 id="第一个jsp" tabindex="-1">第一个JSP <a class="header-anchor" href="#第一个jsp" aria-label="Permalink to &quot;第一个JSP&quot;">​</a></h2><p>首先web项目引入jsp的api-jar</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;javax.servlet&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;servlet-api&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2.5&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;provided&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- https://mvnrepository.com/artifact/javax.servlet/jsp-api --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;javax.servlet&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;jsp-api&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;provided&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>然后编写第一个jsp文件，然后就可以把访问这个页面了。 文件</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">%@ page import=&quot;java.util.Date&quot; %&gt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">%--</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Created by IntelliJ IDEA.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  User: w</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Date: 2022/4/6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Time: 12:10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  To change this template use File | Settings | File Templates.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--%&gt;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;First Page&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">% Date date = new Date();%&gt;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">% out.write(&quot;服务器时间&quot;); %&gt;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">% out.write(date.toLocaleString()); %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>显示结果</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>服务器时间 2022年4月6日 下午7:10:35</span></span></code></pre></div><h2 id="jsp的基本原理" tabindex="-1">JSP的基本原理 <a class="header-anchor" href="#jsp的基本原理" aria-label="Permalink to &quot;JSP的基本原理&quot;">​</a></h2><p>tomcat里面有一个work，里面有临时文件，对于idea来说会在一个特殊的地方，比如我的在</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>C:\\Users\\www\\AppData\\Local\\JetBrains\\IntelliJIdea2021.3\\tomcat\\2ba1a2bb-d42b-493f-8b8d-a10a6d38e665\\work\\Catalina\\localhost\\JavaWeb_war_exploded\\org\\apache\\jsp</span></span></code></pre></div><p>里面可以看到两个文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Mode                 LastWriteTime         Length Name</span></span>
<span class="line"><span>----                 -------------         ------ ----</span></span>
<span class="line"><span>-a----          2022/4/6     12:24           5669 first_jsp.class</span></span>
<span class="line"><span>-a----          2022/4/6     12:24           5170 first_jsp.java</span></span></code></pre></div><p>这不就是java吗？这个名字和我的jsp名字相同。 原来jsp引擎会在页面第一次访问的时候将页面编译成java。 jsp会继承HttpJspBase而HttpJspBase又继承了Servlet，所以可以称jsp就是一个servlet。</p><p>当然这个过程也省略了配置web.xml的过程。</p><h2 id="语法规则" tabindex="-1">语法规则 <a class="header-anchor" href="#语法规则" aria-label="Permalink to &quot;语法规则&quot;">​</a></h2><p>支持html注释<code>&lt;!-- 注释内容 --&gt;</code>好处是html中可以看到。 支持jsp注释<code>&lt;%-- 注释内容 --%&gt;</code></p><p><code>&lt;% %&gt;</code>中不能出现</p><ul><li>声明变量不能添加访问权限修饰符</li><li>不能定义方法</li><li>不能添加静态代码语句块 原因时jsp中的内容会被放到一个文件中。</li></ul><p>如果想要定义方法需要将方法定义代码放在<code>&lt;%! %&gt;</code>中。 直接输出的内容可以直接放在<code>&lt;%=%&gt;</code>中，等号后面的内容会被直接放在out.write()中。</p><h2 id="九大内置对象" tabindex="-1">九大内置对象 <a class="header-anchor" href="#九大内置对象" aria-label="Permalink to &quot;九大内置对象&quot;">​</a></h2><p>PageContext 页面上下文 request session 和servlet一样 application 应用程序 response config out 和printWriter类似继承了io的Writer page 就是this对象 exception</p><h2 id="jsp指令" tabindex="-1">JSP指令 <a class="header-anchor" href="#jsp指令" aria-label="Permalink to &quot;JSP指令&quot;">​</a></h2><p>JSP指令可以开启关闭session（session=true） 还有exception对象 （isErrorPage=true） 还可以使用include指令静态引入其他界面（变量不能重复）。 可以指定错误处理界面 errorPage=/error.jsp来指定专门应该处理错误的页面。</p><h2 id="el表达式" tabindex="-1">EL表达式 <a class="header-anchor" href="#el表达式" aria-label="Permalink to &quot;EL表达式&quot;">​</a></h2><p>全称表达式语言。 会自动进行类型转换。 以“\${”开始，以“}”作为结束： 总结来说和js使用很像。 表达错误的时候并不会报错。 可以使用运算符。 el表达式中可以使用一些内置对象。 可以自定义一些el函数（tld文件放在web-inf下）。</p><h2 id="jstl标签" tabindex="-1">JSTL标签 <a class="header-anchor" href="#jstl标签" aria-label="Permalink to &quot;JSTL标签&quot;">​</a></h2><p>JSTL标签类似一个类库包含了很多常用的工具类。 可以引入jsp文件中使用。 类似于前端开发的lodash。</p>`,30)])])}const o=i(l,[["render",e]]);export{g as __pageData,o as default};
