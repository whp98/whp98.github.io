import{_ as a,c as e,o as s,ag as r}from"./chunks/framework.8SQNO8WI.js";const _=JSON.parse('{"title":"Rust介绍","description":"","frontmatter":{},"headers":[],"relativePath":"Rust语言/rust介绍.md","filePath":"Rust语言/rust介绍.md","lastUpdated":1717397989000}'),i={name:"Rust语言/rust介绍.md"};function l(o,t,u,p,n,c){return s(),e("div",null,[...t[0]||(t[0]=[r('<h1 id="rust介绍" tabindex="-1">Rust介绍 <a class="header-anchor" href="#rust介绍" aria-label="Permalink to &quot;Rust介绍&quot;">​</a></h1><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><p>Rust是一门由Mozilla研究院开发的多范式、编译型编程语言。以下是Rust语言的一些关键特点:</p><ul><li><p>零成本抽象(Zero-cost abstraction):Rust通过完善的类型系统和所有权(ownership)模型消除了运行时的开销,提供了与C++相当的性能。</p></li><li><p>内存安全(Memory safety):Rust的编译器保证了内存安全,避免了内存相关的错误如野指针、缓冲区溢出、重复释放等。</p></li><li><p>无数据竞争(Fearless concurrency):Rust的借用检查器在编译时消除数据竞争,不需要运行时开销。</p></li><li><p>生产力(Productivity):Rust拥有表达能力强的语言设计、智能的编译器、优秀的包管理器Cargo等,提供了现代语言应有的生产力。</p></li><li><p>类型推断(Type inference):编译器可自动推断大多数变量的类型,减少显式标注。</p></li><li><p>模块系统(Module system):强大的模块系统增加代码的抽象能力和重用性。</p></li><li><p>函数式语言特性:Rust支持高阶函数、闭包、迭代器等函数式编程特性。</p></li><li><p>工业级应用:Rust被广泛应用于底层嵌入式、游戏、区块链、云计算等领域。</p></li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>总之,Rust作为一门兼具性能与安全的系统编程语言,适用于对性能和安全要求高的场景,如底层库、服务端、游戏引擎、嵌入式设备等开发。</p>',6)])])}const h=a(i,[["render",l]]);export{_ as __pageData,h as default};
