import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.8SQNO8WI.js";const g=JSON.parse('{"title":"引入durid连接池并配置完整sql打印","description":"","frontmatter":{},"headers":[],"relativePath":"后端开发/使用durid打印可执行sql.md","filePath":"后端开发/使用durid打印可执行sql.md","lastUpdated":1726751071000}'),l={name:"后端开发/使用durid打印可执行sql.md"};function e(p,s,h,k,r,E){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="引入durid连接池并配置完整sql打印" tabindex="-1">引入durid连接池并配置完整sql打印 <a class="header-anchor" href="#引入durid连接池并配置完整sql打印" aria-label="Permalink to &quot;引入durid连接池并配置完整sql打印&quot;">​</a></h1><h2 id="_1-引入数据库相关依赖" tabindex="-1">1.引入数据库相关依赖 <a class="header-anchor" href="#_1-引入数据库相关依赖" aria-label="Permalink to &quot;1.引入数据库相关依赖&quot;">​</a></h2><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- druid --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;com.alibaba&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;druid-spring-boot-starter&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="_2-设置数据源" tabindex="-1">2.设置数据源 <a class="header-anchor" href="#_2-设置数据源" aria-label="Permalink to &quot;2.设置数据源&quot;">​</a></h2><p>注意我用的是toml格式配置</p><p>相关文章 <a href="https://www.jsfr.work/Java%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/Spring/use-toml-config-in-spring-boot.html" target="_blank" rel="noreferrer">https://www.jsfr.work/Java语言相关/Spring/use-toml-config-in-spring-boot.html</a></p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">datasource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">druid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver-class-name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jdbc:mysql://127.0.0.1:13306/DB1?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;serverTimezone=GMT&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xxxx&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">max-active = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">initial-size = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">min-idle = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">min-evictable-idle-time-millis = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">max-wait = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">validation-query = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;select 1 from dual&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test-on-borrow = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test-on-return = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test-while-idle = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time-between-eviction-runs-millis = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.enabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statement-prepare-after-log-enabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementCreateAfterLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementExecuteQueryAfterLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementExecuteAfterLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementParameterSetLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementCloseAfterLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementExecuteBatchAfterLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementExecuteUpdateAfterLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementPrepareCallAfterLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementExecutableSqlLogEnable = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filter.slf4j.statementLogEnabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h2 id="_3-设置log" tabindex="-1">3.设置log <a class="header-anchor" href="#_3-设置log" aria-label="Permalink to &quot;3.设置log&quot;">​</a></h2><p>logback-spring.xml</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">logger</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;druid.sql.Statement&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DEBUG&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> additivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender-ref</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CONSOLE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="_4-查看日志" tabindex="-1">4.查看日志 <a class="header-anchor" href="#_4-查看日志" aria-label="Permalink to &quot;4.查看日志&quot;">​</a></h2><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2024-01-18 20:00:41.554-DEBUG-[main]xxx.aclass: ==&gt;  Preparing: select fanhao from av_job limit 1 </span></span>
<span class="line"><span>2024-01-18 20:00:41.582-DEBUG-[main]xxx.aclass: ==&gt; Parameters:  </span></span>
<span class="line"><span>2024-01-18 20:00:41.585-DEBUG-[main]druid.sql.Statement: {conn-10005, pstmt-20000} executed. select col1</span></span>
<span class="line"><span>        from table1 limit 1 </span></span>
<span class="line"><span>2024-01-18 20:00:41.605-DEBUG-[main]xxx.aclass: &lt;==      Total: 1 </span></span>
<span class="line"><span>2024-01-18 20:00:41.609-INFO -[main]xxx.aclass: 1111</span></span></code></pre></div><h2 id="_5-总结" tabindex="-1">5.总结 <a class="header-anchor" href="#_5-总结" aria-label="Permalink to &quot;5.总结&quot;">​</a></h2><p>使用durid可以简单实现完整的sql打印,debug效果很好。</p>`,14)])])}const o=i(l,[["render",e]]);export{g as __pageData,o as default};
