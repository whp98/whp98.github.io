import{_ as a,c as e,o as i,ag as n}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"WSL安装CODE-SERVER","description":"","frontmatter":{},"headers":[],"relativePath":"Linux系统/WSL安装CODE-SERVER.md","filePath":"Linux系统/WSL安装CODE-SERVER.md","lastUpdated":1717397989000}'),p={name:"Linux系统/WSL安装CODE-SERVER.md"};function t(l,s,r,h,d,o){return i(),e("div",null,[...s[0]||(s[0]=[n(`<h1 id="wsl安装code-server" tabindex="-1">WSL安装CODE-SERVER <a class="header-anchor" href="#wsl安装code-server" aria-label="Permalink to &quot;WSL安装CODE-SERVER&quot;">​</a></h1><p>安装步骤参考<a href="https://github.com/coder/code-server" target="_blank" rel="noreferrer">开源项目</a>的介绍</p><h2 id="_1-给curl设置代理" tabindex="-1">1. 给curl设置代理 <a class="header-anchor" href="#_1-给curl设置代理" aria-label="Permalink to &quot;1. 给curl设置代理&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编辑curl配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.curlrc</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加代理配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socks5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;127.0.0.1:20002&quot;</span></span></code></pre></div><h2 id="_2-使用官方脚本安装" tabindex="-1">2. 使用官方脚本安装 <a class="header-anchor" href="#_2-使用官方脚本安装" aria-label="Permalink to &quot;2. 使用官方脚本安装&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://code-server.dev/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span></span></code></pre></div><h2 id="_3-安装好之后设置配置文件" tabindex="-1">3. 安装好之后设置配置文件 <a class="header-anchor" href="#_3-安装好之后设置配置文件" aria-label="Permalink to &quot;3. 安装好之后设置配置文件&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/code-server/config.yaml</span></span></code></pre></div><p>我的配置文件如下</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bind-addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:8080</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">password</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">532725be4b25xxxxxxx4be426</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><p>可以编辑端口号和密码</p><h2 id="_4-启动code-server" tabindex="-1">4.启动code-SERVER <a class="header-anchor" href="#_4-启动code-server" aria-label="Permalink to &quot;4.启动code-SERVER&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code-server</span></span></code></pre></div><p>输入设置好的网址即可使用</p><h2 id="_5-使用frp转发端口" tabindex="-1">5.使用frp转发端口 <a class="header-anchor" href="#_5-使用frp转发端口" aria-label="Permalink to &quot;5.使用frp转发端口&quot;">​</a></h2><p>此处略过</p><h2 id="_6-nginx设置反向代理使用https访问" tabindex="-1">6.nginx设置反向代理使用https访问 <a class="header-anchor" href="#_6-nginx设置反向代理使用https访问" aria-label="Permalink to &quot;6.nginx设置反向代理使用https访问&quot;">​</a></h2><p>此处参考</p><p>1.<a href="https://coder.com/docs/code-server/latest/guide#using-a-subpath" target="_blank" rel="noreferrer">官方</a> 2.<a href="https://www.cnblogs.com/woshimrf/p/nginx-proxy-rewrite-url.html" target="_blank" rel="noreferrer">cnblog</a></p><p>此处我本地wsl开启的端口是21001</p><p>所以可以使用 localhost:21001/proxy/21001/? 这个地址来使用</p><p>nginx设置一个反向代理即可使用网站的sub path来使用codeserver了</p><p>使用路径</p><p><a href="https://xn--5tzm5g/proxy/21001/" target="_blank" rel="noreferrer">https://网站/proxy/21001/</a>?</p><p>配置文件如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>location ^~/proxy/21001/ {</span></span>
<span class="line"><span>                proxy_set_header Host $host;</span></span>
<span class="line"><span>                proxy_set_header  X-Real-IP        $remote_addr;</span></span>
<span class="line"><span>                proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>                proxy_set_header X-NginX-Proxy true;</span></span>
<span class="line"><span>                proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span>                proxy_set_header Connection upgrade;</span></span>
<span class="line"><span>                proxy_set_header Accept-Encoding gzip;</span></span>
<span class="line"><span>                rewrite ^/proxy/21001/(.*)$ /$1 break;</span></span>
<span class="line"><span>                proxy_pass http://127.0.0.1:30222;</span></span>
<span class="line"><span>        }</span></span></code></pre></div>`,26)])])}const g=a(p,[["render",t]]);export{k as __pageData,g as default};
