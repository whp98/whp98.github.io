import{_ as a,c as i,o as l,ag as n}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Oracle脚本注意事项","description":"","frontmatter":{},"headers":[],"relativePath":"数据库/Oracle数据库/Oracle脚本注意事项.md","filePath":"数据库/Oracle数据库/Oracle脚本注意事项.md","lastUpdated":1717397989000}'),e={name:"数据库/Oracle数据库/Oracle脚本注意事项.md"};function t(h,s,p,k,E,r){return l(),i("div",null,[...s[0]||(s[0]=[n(`<h1 id="oracle脚本注意事项" tabindex="-1">Oracle脚本注意事项 <a class="header-anchor" href="#oracle脚本注意事项" aria-label="Permalink to &quot;Oracle脚本注意事项&quot;">​</a></h1><p>Oracle数据脚本一般都会使用pl/sql执行或者使用命令行执行，有一些问题会导致脚本无法顺利执行，下面谈谈我遇到的案例。</p><h2 id="转义" tabindex="-1">转义 <a class="header-anchor" href="#转义" aria-label="Permalink to &quot;转义&quot;">​</a></h2><ol><li>字符串内的单引号需要通过自身来转义，如表达<code>&#39;你好&#39;</code>书写成<code>&#39;&#39;&#39;你好&#39;&#39;&#39;</code></li><li><code>&amp;</code>符号，这个是用自身转义自身<code>&amp;&amp;</code>或者使用Chr(38)表示</li><li><code>&quot;</code>这个双引号可以用于报错非法字符,如<code>to_char(sysdate,&#39;hh24&quot;小时&quot;mi&quot;分&quot;ss&quot;秒&quot;&#39;)</code></li></ol><h2 id="结束符号" tabindex="-1">结束符号 <a class="header-anchor" href="#结束符号" aria-label="Permalink to &quot;结束符号&quot;">​</a></h2><p>对于脚本中DECLARE结束，需要使用如下的结束符号结束。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span></code></pre></div><h2 id="非法空行" tabindex="-1">非法空行 <a class="header-anchor" href="#非法空行" aria-label="Permalink to &quot;非法空行&quot;">​</a></h2><p>表定义中如果在列中包含空行则会导致报错，如下的代码中N2_S下方就是一个空行，执行到这一行会导致后面的的 <code>）TAB ...</code>被当成一个单独的sql从而创建表报错。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TRSK_RPT_DATA_211213</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    N1_S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NUMBER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    N2_S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NUMBER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) TABLESPACE MASTER_APP_DAT PCTFREE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> INITRANS </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAXTRANS </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STORAGE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    INITIAL 64K</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    NEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1M</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    MINEXTENTS </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    MAXEXTENTS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UNLIMITED</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,10)])])}const o=a(e,[["render",t]]);export{c as __pageData,o as default};
