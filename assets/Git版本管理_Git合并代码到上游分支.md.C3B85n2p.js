import{_ as a,c as i,o as t,ag as e}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Git合并代码到上游分支","description":"","frontmatter":{},"headers":[],"relativePath":"Git版本管理/Git合并代码到上游分支.md","filePath":"Git版本管理/Git合并代码到上游分支.md","lastUpdated":1717397989000}'),n={name:"Git版本管理/Git合并代码到上游分支.md"};function p(l,s,h,d,r,o){return t(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="git合并代码到上游分支" tabindex="-1">Git合并代码到上游分支 <a class="header-anchor" href="#git合并代码到上游分支" aria-label="Permalink to &quot;Git合并代码到上游分支&quot;">​</a></h1><p>如果在git上fork了一个项目，自己对项目做了改动并提交到了fork出来的仓库中， 此时上游仓库也做了提交，这时候我们就不能直接拉请求，需要本地合并上游分支后才可以。</p><h2 id="切换到仓库的主分支" tabindex="-1">切换到仓库的主分支 <a class="header-anchor" href="#切换到仓库的主分支" aria-label="Permalink to &quot;切换到仓库的主分支&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div><p>output:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Already on &#39;master&#39;</span></span>
<span class="line"><span>Your branch is up to date with &#39;origin/master&#39;.</span></span></code></pre></div><h2 id="查看远程分支" tabindex="-1">查看远程分支 <a class="header-anchor" href="#查看远程分支" aria-label="Permalink to &quot;查看远程分支&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><p>output：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>origin  https://github.com/whp98/Hail.git (fetch)</span></span>
<span class="line"><span>origin  https://github.com/whp98/Hail.git (push)</span></span>
<span class="line"><span>upstream        https://github.com/aistra0528/Hail.git (fetch)</span></span>
<span class="line"><span>upstream        https://github.com/aistra0528/Hail.git (push)</span></span></code></pre></div><p>这里的upstream是上游的意思 如果没有upstream就需要添加了</p><h2 id="添加上游分支" tabindex="-1">添加上游分支 <a class="header-anchor" href="#添加上游分支" aria-label="Permalink to &quot;添加上游分支&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/aistra0528/Hail.git</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看结果</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><p>添加之后可以拉取上游到本地了</p><h2 id="从上游分支拉取代码" tabindex="-1">从上游分支拉取代码 <a class="header-anchor" href="#从上游分支拉取代码" aria-label="Permalink to &quot;从上游分支拉取代码&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span></span></code></pre></div><h2 id="合并分支到" tabindex="-1">合并分支到 <a class="header-anchor" href="#合并分支到" aria-label="Permalink to &quot;合并分支到&quot;">​</a></h2><p>合并上游分支到主分支</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream/master</span></span></code></pre></div><p>合并后一般会有冲突需要解决，这里可以使用<code>idea</code>进行合并合并好之后就可以提交了。 并推送本地分支到远程分支。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;commit_message&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div>`,21)])])}const g=a(n,[["render",p]]);export{c as __pageData,g as default};
