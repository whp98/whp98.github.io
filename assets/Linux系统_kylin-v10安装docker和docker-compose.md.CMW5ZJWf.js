import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.8SQNO8WI.js";const r=JSON.parse('{"title":"kylin-v10安装docker和docker-compose","description":"","frontmatter":{},"headers":[],"relativePath":"Linux系统/kylin-v10安装docker和docker-compose.md","filePath":"Linux系统/kylin-v10安装docker和docker-compose.md","lastUpdated":1746500628000}'),t={name:"Linux系统/kylin-v10安装docker和docker-compose.md"};function p(l,s,h,o,k,d){return e(),i("div",null,[...s[0]||(s[0]=[n(`<h1 id="kylin-v10安装docker和docker-compose" tabindex="-1">kylin-v10安装docker和docker-compose <a class="header-anchor" href="#kylin-v10安装docker和docker-compose" aria-label="Permalink to &quot;kylin-v10安装docker和docker-compose&quot;">​</a></h1><blockquote><p>这种方法仅适用于kylin-v10，其他系统请使用包管理器安装</p></blockquote><h2 id="预先检查下linux上是否有docker和docker-compose还有podman" tabindex="-1">预先检查下linux上是否有docker和docker-compose还有podman <a class="header-anchor" href="#预先检查下linux上是否有docker和docker-compose还有podman" aria-label="Permalink to &quot;预先检查下linux上是否有docker和docker-compose还有podman&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> podman</span></span></code></pre></div><p>podman会导致docker无法运行，需要卸载podman</p><p>当然也要确认podman没有被使用</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">podman</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> podman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><p>查看cpu类型</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arch</span></span></code></pre></div><h2 id="安装docker和docker-compose" tabindex="-1">安装docker和docker-compose <a class="header-anchor" href="#安装docker和docker-compose" aria-label="Permalink to &quot;安装docker和docker-compose&quot;">​</a></h2><p>首先去下载docker和docker-compose 根据cpu类型下载 <a href="https://download.docker.com/linux/static/stable/" target="_blank" rel="noreferrer">https://download.docker.com/linux/static/stable/</a></p><p>本次选择x86_64</p><p><a href="https://github.com/docker/compose/releases" target="_blank" rel="noreferrer">https://github.com/docker/compose/releases</a></p><p>选择linux 64的</p><p>获取之后将文件上传到服务器上</p><h2 id="将二进制复制到系统的bin目录下" tabindex="-1">将二进制复制到系统的bin目录下 <a class="header-anchor" href="#将二进制复制到系统的bin目录下" aria-label="Permalink to &quot;将二进制复制到系统的bin目录下&quot;">​</a></h2><p>解压docker安装包并将二进制复制到系统bin目录下</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-20.10.17.tgz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose-linux-x86_64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/docker-compose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/docker-compose</span></span></code></pre></div><h2 id="编辑systemd文件" tabindex="-1">编辑systemd文件 <a class="header-anchor" href="#编辑systemd文件" aria-label="Permalink to &quot;编辑systemd文件&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  /usr/lib/systemd/system/docker.service</span></span></code></pre></div><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description=Docker Application Container Engine</span></span>
<span class="line"><span>Documentation=https://docs.docker.com</span></span>
<span class="line"><span>After=network-online.target firewalld.service</span></span>
<span class="line"><span>Wants=network-online.target</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>Type=notify</span></span>
<span class="line"><span>ExecStart=/usr/bin/dockerd</span></span>
<span class="line"><span>ExecReload=/bin/kill -s HUP $MAINPID</span></span>
<span class="line"><span>LimitNOFILE=infinity</span></span>
<span class="line"><span>LimitNPROC=infinity</span></span>
<span class="line"><span>TimeoutStartSec=0</span></span>
<span class="line"><span>Delegate=yes</span></span>
<span class="line"><span>KillMode=process</span></span>
<span class="line"><span>Restart=on-failure</span></span>
<span class="line"><span>StartLimitBurst=3</span></span>
<span class="line"><span>StartLimitInterval=60s</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span></code></pre></div><h2 id="添加docker用户组" tabindex="-1">添加docker用户组 <a class="header-anchor" href="#添加docker用户组" aria-label="Permalink to &quot;添加docker用户组&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">groupadd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 用户1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 用户2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span></code></pre></div><h2 id="创建daemon-json文件" tabindex="-1">创建daemon.json文件 <a class="header-anchor" href="#创建daemon-json文件" aria-label="Permalink to &quot;创建daemon.json文件&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/daemon.json</span></span></code></pre></div><p>内容如下</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;registry-mirrors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://registry.docker-cn.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;exec-opts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;native.cgroupdriver=systemd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="启动docker" tabindex="-1">启动docker <a class="header-anchor" href="#启动docker" aria-label="Permalink to &quot;启动docker&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><h2 id="测试docker是否安装成功" tabindex="-1">测试docker是否安装成功 <a class="header-anchor" href="#测试docker是否安装成功" aria-label="Permalink to &quot;测试docker是否安装成功&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span></code></pre></div>`,33)])])}const g=a(t,[["render",p]]);export{r as __pageData,g as default};
