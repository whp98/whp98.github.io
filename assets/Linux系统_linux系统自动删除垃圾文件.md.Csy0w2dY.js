import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.8SQNO8WI.js";const E=JSON.parse('{"title":"linux系统自动删除垃圾文件","description":"","frontmatter":{},"headers":[],"relativePath":"Linux系统/linux系统自动删除垃圾文件.md","filePath":"Linux系统/linux系统自动删除垃圾文件.md","lastUpdated":1717397989000}'),t={name:"Linux系统/linux系统自动删除垃圾文件.md"};function l(p,s,k,e,r,d){return n(),a("div",null,[...s[0]||(s[0]=[h(`<h1 id="linux系统自动删除垃圾文件" tabindex="-1">linux系统自动删除垃圾文件 <a class="header-anchor" href="#linux系统自动删除垃圾文件" aria-label="Permalink to &quot;linux系统自动删除垃圾文件&quot;">​</a></h1><p>代码仓库: <a href="https://github.com/whp98/linux-clean-sh" target="_blank" rel="noreferrer">https://github.com/whp98/linux-clean-sh</a></p><p>本脚本已经测试过可以使用。 脚本功能:</p><ul><li>自动删除工作目录中的垃圾文件夹</li><li>跳过以skip_keywords中定义字符串结尾的文件夹</li><li>只删除文件夹不会删除文件</li><li>生成脚本运行的日志</li></ul><h2 id="脚本本体" tabindex="-1">脚本本体 <a class="header-anchor" href="#脚本本体" aria-label="Permalink to &quot;脚本本体&quot;">​</a></h2><h3 id="使用ubuntu和oracle-linux系统测试通过" tabindex="-1">使用<code>Ubuntu</code>和<code>Oracle Linux</code>系统测试通过 <a class="header-anchor" href="#使用ubuntu和oracle-linux系统测试通过" aria-label="Permalink to &quot;使用\`Ubuntu\`和\`Oracle Linux\`系统测试通过&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">workdir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/mnt/e/WIN_HOME/Desktop/linux-rm-sh&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logfile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$workdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/rm-dir.log</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skip_keywords</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0331&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0630&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0930&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1231&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$workdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 检查是否是目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 检查是否包含关键字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        skip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skip_keywords</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[ $item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$str ]]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;+%Y-%m-%d %H:%M:%S&#39;): skip  </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $logfile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                skip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                break</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        done</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 删除目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[ $skip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $workdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$workdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            #rm -rf &quot;$item&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;+%Y-%m-%d %H:%M:%S&#39;): rm -rf </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $logfile</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div><p>脚本运行输出</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[oracle@oracle-19c-vagrant test]$ ./rm-dir.sh</span></span>
<span class="line"><span>2023-11-12 17:23:49: skip  /home/oracle/test/20221231</span></span>
<span class="line"><span>2023-11-12 17:23:49: skip  /home/oracle/test/20230331</span></span>
<span class="line"><span>2023-11-12 17:23:49: skip  /home/oracle/test/20230630</span></span>
<span class="line"><span>2023-11-12 17:23:49: rm -rf /home/oracle/test/20230630 - 副本</span></span>
<span class="line"><span>2023-11-12 17:23:49: skip  /home/oracle/test/20230930</span></span>
<span class="line"><span>2023-11-12 17:23:49: skip  /home/oracle/test/20231231</span></span></code></pre></div><h2 id="使用crontab命令来设置自动运行" tabindex="-1">使用<code>crontab</code>命令来设置自动运行 <a class="header-anchor" href="#使用crontab命令来设置自动运行" aria-label="Permalink to &quot;使用\`crontab\`命令来设置自动运行&quot;">​</a></h2><ul><li><p>编辑定时任务 <code>crontab -e</code>输入（和vi一样操作）:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>18 17 * * *  /home/oracle/test/rm-dir.sh</span></span></code></pre></div><p>含义：分 时 日 月 周 执行的命令</p><p>上方的意思是每天17:18执行清理脚本</p></li><li><p>查看定时任务 <code>crontab -l</code></p></li><li><p>删除定时任务 <code>crontab -r</code></p></li></ul>`,11)])])}const g=i(t,[["render",l]]);export{E as __pageData,g as default};
