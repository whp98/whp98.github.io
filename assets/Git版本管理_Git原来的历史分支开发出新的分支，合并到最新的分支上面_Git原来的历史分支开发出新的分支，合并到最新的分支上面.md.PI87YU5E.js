import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.8SQNO8WI.js";const n="/assets/git_new_version_from_old_version.BFrZrzCL.svg",p="/assets/2020-03-06-18-30-38.DjRSJ3rt.jpg",E=JSON.parse('{"title":"Git从原来的历史分支开发出新的分支，并且合并到最新的分支上面","description":"","frontmatter":{"title":"Git从原来的历史分支开发出新的分支，并且合并到最新的分支上面","tags":["git","建新分支","合并新分支"],"categories":[["git","branch"],["git","merge"]],"abbrlink":"4d2c","date":"2020-03-06T17:55:45.000Z"},"headers":[],"relativePath":"Git版本管理/Git原来的历史分支开发出新的分支，合并到最新的分支上面/Git原来的历史分支开发出新的分支，合并到最新的分支上面.md","filePath":"Git版本管理/Git原来的历史分支开发出新的分支，合并到最新的分支上面/Git原来的历史分支开发出新的分支，合并到最新的分支上面.md","lastUpdated":1717397989000}'),l={name:"Git版本管理/Git原来的历史分支开发出新的分支，合并到最新的分支上面/Git原来的历史分支开发出新的分支，合并到最新的分支上面.md"};function h(d,s,k,o,c,r){return t(),a("div",null,[...s[0]||(s[0]=[e('<h1 id="git原来的历史分支开发出新的分支-合并到最新的分支上面" tabindex="-1">Git原来的历史分支开发出新的分支，合并到最新的分支上面 <a class="header-anchor" href="#git原来的历史分支开发出新的分支-合并到最新的分支上面" aria-label="Permalink to &quot;Git原来的历史分支开发出新的分支，合并到最新的分支上面&quot;">​</a></h1><p>我最近在学习微信小程序开发，用git做版本管理，今天我遇到了一个问题：</p><p>我当前的版本是<code>v2.5.1</code>然后有一个作业是综合<code>v2.2</code>-<code>v2.5.1</code>的内容,我认为这个项目从<code>v2.3</code>稍作修改，添加上后面的内容就可以完成作业，所以我们要从当前版本回到<code>v2.3</code>版本做修改然后将修改后的内容合并到<code>master</code>分支。</p><h2 id="解决思路" tabindex="-1">解决思路 <a class="header-anchor" href="#解决思路" aria-label="Permalink to &quot;解决思路&quot;">​</a></h2><p>之前我有过一次<code>head</code>指针游离的经历所以我决定创建分支来解决此问题。</p><p>具体的解决思路如下图：</p><p><img src="'+n+`" alt=""></p><h2 id="实际操作" tabindex="-1">实际操作 <a class="header-anchor" href="#实际操作" aria-label="Permalink to &quot;实际操作&quot;">​</a></h2><p>我决定从dev分支做修改，于是就先删除了原来的<code>dev</code>分支,然后从 tag<code>v2.3</code>创建<code>dev</code>分支</p><div class="language-ps vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ps</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除分支</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git branch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从2.3创建新分支</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git branch dev v2.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span></code></pre></div><p>然后修改代码之后提交到dev分支</p><p>这里忽略我的修改过程，直接贴出包含git的操作</p><div class="language-ps vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ps</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git add .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;修改完成，完成了作业&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 回到master</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> master</span></span></code></pre></div><p>合并仓库</p><div class="language-ps vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ps</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git merge dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果没冲突会成功，如果有冲突就直接修改文件解决冲突</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解决完冲突之后</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git add .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;解决了冲突&quot;</span></span></code></pre></div><p>给最新的版本打tag</p><div class="language-ps vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ps</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git tag v2.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将新版提交到github</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tags</span></span></code></pre></div><h2 id="最终可视化gitlog图" tabindex="-1">最终可视化gitlog图 <a class="header-anchor" href="#最终可视化gitlog图" aria-label="Permalink to &quot;最终可视化gitlog图&quot;">​</a></h2><p><img src="`+p+'" alt=""></p>',19)])])}const _=i(l,[["render",h]]);export{E as __pageData,_ as default};
