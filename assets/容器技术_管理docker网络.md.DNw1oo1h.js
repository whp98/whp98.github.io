import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.8SQNO8WI.js";const E=JSON.parse('{"title":"管理docker网络地址范围","description":"","frontmatter":{},"headers":[],"relativePath":"容器技术/管理docker网络.md","filePath":"容器技术/管理docker网络.md","lastUpdated":1726751071000}'),n={name:"容器技术/管理docker网络.md"};function p(k,s,h,l,o,d){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="管理docker网络地址范围" tabindex="-1">管理docker网络地址范围 <a class="header-anchor" href="#管理docker网络地址范围" aria-label="Permalink to &quot;管理docker网络地址范围&quot;">​</a></h1><h2 id="默认网络" tabindex="-1">默认网络 <a class="header-anchor" href="#默认网络" aria-label="Permalink to &quot;默认网络&quot;">​</a></h2><p>Docker 默认的网络设置使用了 bridge 网络驱动，默认情况下 Docker 容器会连接到这个 bridge 网络。Docker 的默认 bridge 网络通常使用以下 IP 段：</p><p>默认子网: 172.17.0.0/16 默认网关: 172.17.0.1 每次创建新的容器时，Docker 会为该容器分配一个 IP 地址，通常在 172.17.0.0/16 范围内。</p><p>默认情况下每个docker-compose.yml文件都会创建一个网络 地址类似下面的 172.18.0.0/16 172.19.0.0/16 172.20.0.0/16</p><p>这样的网络分配可能会和本地的网络冲突，导致无法上网等问题。</p><p>可以使用<code>ip route | grep br-*</code>查看存在的网络</p><p>也可以使用<code>docker network ls</code>查看docker网络和容器关联信息</p><h2 id="限制docker网络在172-17-0-0-16内" tabindex="-1">限制docker网络在172.17.0.0/16内 <a class="header-anchor" href="#限制docker网络在172-17-0-0-16内" aria-label="Permalink to &quot;限制docker网络在172.17.0.0/16内&quot;">​</a></h2><p><code>sudo nano /etc/docker/daemon.json</code> 修改文件，添加如下内容：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default-address-pools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;base&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;172.17.0.0/16&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>也可以配置多个地址池，如：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default-address-pools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;base&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;172.17.0.0/16&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;base&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;172.18.0.0/16&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>配置完成后，重启docker服务即可。</p><p><em>不过已经分配的地址池不会被修改，需要重新分配。</em></p><p>操作是删除容器，再重新启动即可</p>`,16)])])}const c=i(n,[["render",p]]);export{E as __pageData,c as default};
